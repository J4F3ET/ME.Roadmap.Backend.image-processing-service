services:
  postgres:
    image: 'postgres:alpine'
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - '5432'
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
    networks:
      - backend-network
  # Servicio necesario para kafka
  zookeeper:
    image: 'wurstmeister/zookeeper:latest'
    container_name: 'zookeeper'
    ports:
      - '2181'
    networks:
      - backend-network
  # Kafka
  kafka:
    image: 'wurstmeister/kafka'
    container_name: 'kafka'
    ports:
      - '9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "user:1:1"
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    depends_on:
      - zookeeper
    networks:
      - backend-network
volumes:
  postgres_data:
networks:
  backend-network:
    driver: bridge